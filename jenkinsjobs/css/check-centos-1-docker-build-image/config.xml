<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REGISTRY_REPO_NAME</name>
          <description>This is used to identify the name of the docker registry repository that this image is going to be pushed to</description>
          <defaultValue>kuali-centos7-java-tomcat</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.5.7">
          <name>ECR_ID</name>
          <description>The url of the elastic container registry (ECR) where the newly created image is to be pushed to from this server and pulled from by the target docker host</description>
          <randomName>choice-parameter-14435534248426954</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.78">
              <script>return new URL(&quot;http&quot;, &quot;127.0.0.1&quot;, 8002, &quot;/active-choices?parameter-name=ecr_url&quot;).text;</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.78">
              <script>return &quot;ERROR!&quot;</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>check-centos-1-docker-build-image</projectName>
          <projectFullName>check-centos-1-docker-build-image</projectFullName>
          <parameters class="linked-hash-map"/>
          <referencedParameters></referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>false</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_BUILD_CONTEXT_GIT_BRANCH</name>
          <description>You can modify this value to pull a build context stored in a branch other than master.</description>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>JAVA_VERSION</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>11</string>
              <string>8</string>
              <string>7</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>JAVA_RELEASE</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>JDK</string>
              <string>JRE</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TOMCAT_VERSION</name>
          <description>The value the image being built is to tagged with for identification within the local and registry repositories.</description>
          <defaultValue>9.0.41</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># 1) Remove any dangling items
if [ -n &quot;$(docker images --filter dangling=true -q)&quot; ] ; then 
   docker rmi -f $(docker images --filter dangling=true -q); 
   echo &quot;Removed dangling image(s)&quot;;
else
   echo &quot;No dangling images to remove&quot;;
fi
if [ -n &quot;$(docker volume ls -qf dangling=true)&quot; ] ; then 
   docker volume rm $(docker volume ls -qf dangling=true); 
   echo &quot;Removed dangling volume(s)&quot;;
else 
   echo &quot;No dangling volumes to remove&quot;;
fi

# 2) Define variables.
# NOTE: JENKINS_URL is the full URL of Jenkins, like http://server:port/jenkins/ 
#       Only available if Jenkins URL is set in system configuration
ECR_ID=&quot;$(echo $ECR_ID | sed &apos;s/,//g&apos;)&quot;
ECR_REPO_URL=&quot;${ECR_ID}/${REGISTRY_REPO_NAME}&quot;
DOCKER_TAG=&quot;${ECR_REPO_URL}:java${JAVA_VERSION}-tomcat${TOMCAT_VERSION}&quot;
DOCKER_BUILD_CONTEXT=&quot;git@github.com:bu-ist/kuali-research-docker.git#${DOCKER_BUILD_CONTEXT_GIT_BRANCH}:centos-java/build.context&quot;

# 3) This is a private repo and needs ssh to access it
eval `ssh-agent -s`
# Add the key to the agent.
ssh-add ${JENKINS_HOME}/.ssh/bu_github_id_docker_rsa

# 4) Build the image
docker build \
  --no-cache \
  --build-arg TCAT_VERSION=${TOMCAT_VERSION} \
  --build-arg JAVA_VERSION=${JAVA_VERSION} \
  --build-arg JAVA_RELEASE=${JAVA_RELEASE} \
  -t ${DOCKER_TAG} \
  ${DOCKER_BUILD_CONTEXT}

# 5) Kill the ssh agent
eval `ssh-agent -k`</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>